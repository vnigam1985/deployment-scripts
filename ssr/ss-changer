#!/usr/bin/python3
#coding: utf-8
from __future__ import print_function
import json
import os
import sys
import argparse

CONFIG = "/etc/ssr.json"

parser = argparse.ArgumentParser(prog="ss-changer")

parser.add_argument('--server', '-s', help="ssr server address")
parser.add_argument('--port', '-p', type=int, help="remote server port")
parser.add_argument('--local-address', '-l', help="local address binding")
parser.add_argument('--local-port', '-P', help="local port")
parser.add_argument('--password', '-e', help='ssr server password')
parser.add_argument('--method', '-m', help="encryption method")
parser.add_argument('--protocol', '-L', help="ssr protocol")
parser.add_argument('--obfs', '-o', help="ssr obfs")
parser.add_argument('--obfs-param', '-O', help='ssr obfs parameter')
ns = parser.parse_args()

try:
    fd = open(CONFIG, mode='rt')
except:
    print(CONFIG + " does not exists! Quit.", file=sys.stderr)
    sys.exit(1)

ssrjson = json.loads(fd.read())
fd.close()
params = vars(ns)

for k in params.keys():
    v = params.get(k)
    if v is None:
        continue
    else:
        ssrjson[k] = v

try:
    fd = open(CONFIG, mode='wt')
except:
    print("Unable to write to file " + CONFIG, file=sys.stderr)
else:
    json.dump(ssrjson, fd, sort_keys=True, indent=4)
    fd.close()
