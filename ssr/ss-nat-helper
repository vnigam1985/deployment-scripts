#!/bin/bash

function valid_ip()
{
    local  ip=$1
    local  stat=1

    if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        OIFS=$IFS
        IFS='.'
        ip=($ip)
        IFS=$OIFS
        [[ ${ip[0]} -le 255 && ${ip[1]} -le 255 \
            && ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]
        stat=$?
    fi
    return $stat
}

domain_or_ip=`grep \"server\" /etc/ssr.json | awk '{print $2}' | cut -d '"' -f2`
port=`grep \"local_port\" /etc/ssr.json | awk '{print $2}' | cut -d, -f1`

if valid_ip $domain_or_ip
then
    ip=$domain_or_ip
else
    ip=`dig +short $domain_or_ip`
fi

if [ -z "$ip" ]
then
    echo "Domain resolution failed"
    exit 1
fi

if [ -z "$port" ]
then
    echo "Port field is empty"
    exit 1
fi

/usr/local/bin/ss-nat -s $ip -l $port -u -o -i /etc/cidrskip.txt

# enable forwarding
sysctl net.ipv4.conf.all.forwarding | awk '{print $3}' > /var/tmp/ss-redir.forwarding
sysctl net.ipv4.conf.all.forwarding=1
ip rule add fwmark 0x01/0x01 table 100
ip route add local 0.0.0.0/0 dev lo table 100
iptables -t mangle -N SSUDP
iptables -t mangle -A SSUDP -p udp -j TPROXY --on-port $port --tproxy-mark 0x01/0x01
iptables -t mangle -A PREROUTING -j SSUDP
iptables -t mangle -I PREROUTING -d 127.0.0.0/24 -j RETURN
iptables -t mangle -I PREROUTING -d 192.168.0.0/16 -j RETURN
iptables -t mangle -I PREROUTING -d 10.42.0.0/16 -j RETURN
iptables -t mangle -I PREROUTING -d 0.0.0.0/8 -j RETURN
iptables -t mangle -I PREROUTING -d 10.0.0.0/8 -j RETURN
iptables -t mangle -I PREROUTING -d 172.16.0.0/12 -j RETURN
iptables -t mangle -I PREROUTING -d 224.0.0.0/4 -j RETURN
iptables -t mangle -I PREROUTING -d 240.0.0.0/4 -j RETURN
iptables -t mangle -I PREROUTING -d 169.254.0.0/16 -j RETURN
iptables -t mangle -I PREROUTING -d 255.255.0.0/8 -j RETURN
